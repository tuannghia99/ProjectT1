//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.12.0.0 (NJsonSchema v10.4.5.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace ProjectT1.Client.ServerBusiness.Infrastructure.Contracts
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.12.0.0 (NJsonSchema v10.4.5.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial interface IProjectT1Client : IProjectT1ApiClientBase
    {
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfIEnumerableOfKhenThuongDTO> ApiV1ChucnangKhenthuongGetAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfIEnumerableOfKhenThuongDTO> ApiV1ChucnangKhenthuongPostAsync(System.Collections.Generic.IEnumerable<KhenThuongDTO> dataSource, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfKhenThuongDTO> ApiV1ChucnangKhenthuongGetAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfKhenThuongDTO> ApiV1ChucnangKhenthuongPutAsync(KhenThuongDTO objSource, System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfGuid> ApiV1ChucnangKhenthuongDeleteAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfIEnumerableOfKyLuatDTO> ApiV1ChucnangKyluatGetAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfIEnumerableOfKyLuatDTO> ApiV1ChucnangKyluatPostAsync(System.Collections.Generic.IEnumerable<KyLuatDTO> dataSource, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfKyLuatDTO> ApiV1ChucnangKyluatGetAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfKyLuatDTO> ApiV1ChucnangKyluatPutAsync(KyLuatDTO objSource, System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfGuid> ApiV1ChucnangKyluatDeleteAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfIEnumerableOfNhanVienDTO> ApiV1ChucnangNhanvienGetAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfIEnumerableOfNhanVienDTO> ApiV1ChucnangNhanvienPostAsync(System.Collections.Generic.IEnumerable<NhanVienDTO> dataSource, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfNhanVienDTO> ApiV1ChucnangNhanvienGetAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfNhanVienDTO> ApiV1ChucnangNhanvienPutAsync(NhanVienDTO objSource, System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfGuid> ApiV1ChucnangNhanvienDeleteAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfIEnumerableOfChucVuDTO> ApiV1DanhmucChucvuGetAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfIEnumerableOfChucVuDTO> ApiV1DanhmucChucvuPostAsync(System.Collections.Generic.IEnumerable<ChucVuDTO> dataSource, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfChucVuDTO> ApiV1DanhmucChucvuGetAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfChucVuDTO> ApiV1DanhmucChucvuPutAsync(ChucVuDTO objSource, System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfGuid> ApiV1DanhmucChucvuDeleteAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfIEnumerableOfPhongBanDTO> ApiV1DanhmucPhongbanGetAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfIEnumerableOfPhongBanDTO> ApiV1DanhmucPhongbanPostAsync(System.Collections.Generic.IEnumerable<PhongBanDTO> dataSource, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfPhongBanDTO> ApiV1DanhmucPhongbanGetAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfPhongBanDTO> ApiV1DanhmucPhongbanPutAsync(PhongBanDTO objSource, System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfGuid> ApiV1DanhmucPhongbanDeleteAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfIEnumerableOfTrinhDoHocVanDTO> ApiV1DanhmucTrinhdohocvanGetAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfIEnumerableOfTrinhDoHocVanDTO> ApiV1DanhmucTrinhdohocvanPostAsync(System.Collections.Generic.IEnumerable<TrinhDoHocVanDTO> dataSource, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfTrinhDoHocVanDTO> ApiV1DanhmucTrinhdohocvanGetAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfTrinhDoHocVanDTO> ApiV1DanhmucTrinhdohocvanPutAsync(TrinhDoHocVanDTO objSource, System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<OperationResultInfoOfGuid> ApiV1DanhmucTrinhdohocvanDeleteAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Ons this instance.</summary>
        /// <returns>ActionResult.</returns>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> ApiV1OnAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Databases the on.</summary>
        /// <returns>ActionResult.</returns>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> ApiV1OndbAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Ons the error.</summary>
        /// <returns>ActionResult.</returns>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> ApiV1OnerrorAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>Ons the content of the no.</summary>
        /// <returns>ActionResult.</returns>
        /// <exception cref="ProjectT1ApiException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<FileResponse> ApiV1OnnocontentAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationResultInfoOfIEnumerableOfKhenThuongDTO : OperationInfo
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<KhenThuongDTO> Result { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationResultInfoOfIEnumerableOfKhenThuongDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationResultInfoOfIEnumerableOfKhenThuongDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class KhenThuongDTO 
    {
        [Newtonsoft.Json.JsonProperty("oid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Oid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maSo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MaSo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("idNhanVien", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? IdNhanVien { get; set; }
    
        [Newtonsoft.Json.JsonProperty("canCuKhenThuong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CanCuKhenThuong { get; set; }
    
        [Newtonsoft.Json.JsonProperty("lyDoKhenThuong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LyDoKhenThuong { get; set; }
    
        [Newtonsoft.Json.JsonProperty("hinhThucKhenThuong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string HinhThucKhenThuong { get; set; }
    
        [Newtonsoft.Json.JsonProperty("mucKhenThuong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? MucKhenThuong { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ngayKhenThuong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? NgayKhenThuong { get; set; }
    
        [Newtonsoft.Json.JsonProperty("createUser", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CreateUser { get; set; }
    
        [Newtonsoft.Json.JsonProperty("createDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? CreateDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("modifiedUser", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ModifiedUser { get; set; }
    
        [Newtonsoft.Json.JsonProperty("modifiedDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? ModifiedDate { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static KhenThuongDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<KhenThuongDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationInfo 
    {
        [Newtonsoft.Json.JsonProperty("isSuccess", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool IsSuccess { get; set; }
    
        [Newtonsoft.Json.JsonProperty("infoCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string InfoCode { get; set; }
    
        [Newtonsoft.Json.JsonProperty("infoMessage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string InfoMessage { get; set; }
    
        [Newtonsoft.Json.JsonProperty("infoDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string InfoDescription { get; set; }
    
        [Newtonsoft.Json.JsonProperty("userName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("createDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime CreateDate { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationInfo FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationInfo>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationResultInfoOfKhenThuongDTO : OperationInfo
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public KhenThuongDTO Result { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationResultInfoOfKhenThuongDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationResultInfoOfKhenThuongDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ProblemDetails 
    {
        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Type { get; set; }
    
        [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Title { get; set; }
    
        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Status { get; set; }
    
        [Newtonsoft.Json.JsonProperty("detail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Detail { get; set; }
    
        [Newtonsoft.Json.JsonProperty("instance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Instance { get; set; }
    
        private System.Collections.Generic.IDictionary<string, object> _additionalProperties = new System.Collections.Generic.Dictionary<string, object>();
    
        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties; }
            set { _additionalProperties = value; }
        }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static ProblemDetails FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ProblemDetails>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationResultInfoOfGuid : OperationInfo
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Result { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationResultInfoOfGuid FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationResultInfoOfGuid>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationResultInfoOfIEnumerableOfKyLuatDTO : OperationInfo
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<KyLuatDTO> Result { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationResultInfoOfIEnumerableOfKyLuatDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationResultInfoOfIEnumerableOfKyLuatDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class KyLuatDTO 
    {
        [Newtonsoft.Json.JsonProperty("oid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Oid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maSo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MaSo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("idNhanVien", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? IdNhanVien { get; set; }
    
        [Newtonsoft.Json.JsonProperty("thoiGianXayRa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? ThoiGianXayRa { get; set; }
    
        [Newtonsoft.Json.JsonProperty("diaDiemXayRa", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DiaDiemXayRa { get; set; }
    
        [Newtonsoft.Json.JsonProperty("moTaSuViec", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MoTaSuViec { get; set; }
    
        [Newtonsoft.Json.JsonProperty("nhungNguoiChungKien", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NhungNguoiChungKien { get; set; }
    
        [Newtonsoft.Json.JsonProperty("isViPhamChinhSachCongTy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsViPhamChinhSachCongTy { get; set; }
    
        [Newtonsoft.Json.JsonProperty("dienGiai", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DienGiai { get; set; }
    
        [Newtonsoft.Json.JsonProperty("hinhThucKyLuat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string HinhThucKyLuat { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ngayBatDauThiHanh", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? NgayBatDauThiHanh { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ngayHetHieuLuc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? NgayHetHieuLuc { get; set; }
    
        [Newtonsoft.Json.JsonProperty("createUser", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CreateUser { get; set; }
    
        [Newtonsoft.Json.JsonProperty("createDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? CreateDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("modifiedUser", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ModifiedUser { get; set; }
    
        [Newtonsoft.Json.JsonProperty("modifiedDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? ModifiedDate { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static KyLuatDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<KyLuatDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationResultInfoOfKyLuatDTO : OperationInfo
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public KyLuatDTO Result { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationResultInfoOfKyLuatDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationResultInfoOfKyLuatDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationResultInfoOfIEnumerableOfNhanVienDTO : OperationInfo
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<NhanVienDTO> Result { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationResultInfoOfIEnumerableOfNhanVienDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationResultInfoOfIEnumerableOfNhanVienDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class NhanVienDTO 
    {
        [Newtonsoft.Json.JsonProperty("oid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Oid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maSo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MaSo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ten", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Ten { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ngaySinh", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? NgaySinh { get; set; }
    
        [Newtonsoft.Json.JsonProperty("gioiTinh", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string GioiTinh { get; set; }
    
        [Newtonsoft.Json.JsonProperty("noiSinh", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NoiSinh { get; set; }
    
        [Newtonsoft.Json.JsonProperty("diaChi", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DiaChi { get; set; }
    
        [Newtonsoft.Json.JsonProperty("quocTich", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string QuocTich { get; set; }
    
        [Newtonsoft.Json.JsonProperty("danToc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DanToc { get; set; }
    
        [Newtonsoft.Json.JsonProperty("tonGiao", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TonGiao { get; set; }
    
        [Newtonsoft.Json.JsonProperty("tinhTrangHonNhan", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TinhTrangHonNhan { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ngoaiNgu", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NgoaiNgu { get; set; }
    
        [Newtonsoft.Json.JsonProperty("tinHoc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TinHoc { get; set; }
    
        [Newtonsoft.Json.JsonProperty("soCanCuoc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SoCanCuoc { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ngayCap", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? NgayCap { get; set; }
    
        [Newtonsoft.Json.JsonProperty("noiCap", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NoiCap { get; set; }
    
        [Newtonsoft.Json.JsonProperty("tinhTrangSucKhoe", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TinhTrangSucKhoe { get; set; }
    
        [Newtonsoft.Json.JsonProperty("chieuCao", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public decimal? ChieuCao { get; set; }
    
        [Newtonsoft.Json.JsonProperty("canNang", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public decimal? CanNang { get; set; }
    
        [Newtonsoft.Json.JsonProperty("idChucVu", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? IdChucVu { get; set; }
    
        [Newtonsoft.Json.JsonProperty("idPhongBan", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? IdPhongBan { get; set; }
    
        [Newtonsoft.Json.JsonProperty("idTrinhDoHocVan", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? IdTrinhDoHocVan { get; set; }
    
        [Newtonsoft.Json.JsonProperty("username", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Username { get; set; }
    
        [Newtonsoft.Json.JsonProperty("password", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Password { get; set; }
    
        [Newtonsoft.Json.JsonProperty("avatar", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public byte[] Avatar { get; set; }
    
        [Newtonsoft.Json.JsonProperty("phoneNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PhoneNumber { get; set; }
    
        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Email { get; set; }
    
        [Newtonsoft.Json.JsonProperty("isAdmin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool IsAdmin { get; set; }
    
        [Newtonsoft.Json.JsonProperty("createUser", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CreateUser { get; set; }
    
        [Newtonsoft.Json.JsonProperty("createDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? CreateDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("modifiedUser", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ModifiedUser { get; set; }
    
        [Newtonsoft.Json.JsonProperty("modifiedDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? ModifiedDate { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static NhanVienDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<NhanVienDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationResultInfoOfNhanVienDTO : OperationInfo
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public NhanVienDTO Result { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationResultInfoOfNhanVienDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationResultInfoOfNhanVienDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationResultInfoOfIEnumerableOfChucVuDTO : OperationInfo
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ChucVuDTO> Result { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationResultInfoOfIEnumerableOfChucVuDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationResultInfoOfIEnumerableOfChucVuDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class ChucVuDTO 
    {
        [Newtonsoft.Json.JsonProperty("oid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Oid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maSo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MaSo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ten", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Ten { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static ChucVuDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ChucVuDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationResultInfoOfChucVuDTO : OperationInfo
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ChucVuDTO Result { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationResultInfoOfChucVuDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationResultInfoOfChucVuDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationResultInfoOfIEnumerableOfPhongBanDTO : OperationInfo
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PhongBanDTO> Result { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationResultInfoOfIEnumerableOfPhongBanDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationResultInfoOfIEnumerableOfPhongBanDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class PhongBanDTO 
    {
        [Newtonsoft.Json.JsonProperty("oid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Oid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maSo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MaSo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ten", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Ten { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static PhongBanDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PhongBanDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationResultInfoOfPhongBanDTO : OperationInfo
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PhongBanDTO Result { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationResultInfoOfPhongBanDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationResultInfoOfPhongBanDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationResultInfoOfIEnumerableOfTrinhDoHocVanDTO : OperationInfo
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<TrinhDoHocVanDTO> Result { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationResultInfoOfIEnumerableOfTrinhDoHocVanDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationResultInfoOfIEnumerableOfTrinhDoHocVanDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class TrinhDoHocVanDTO 
    {
        [Newtonsoft.Json.JsonProperty("oid", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Oid { get; set; }
    
        [Newtonsoft.Json.JsonProperty("maSo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MaSo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("ten", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Ten { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static TrinhDoHocVanDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<TrinhDoHocVanDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.4.5.0 (Newtonsoft.Json v11.0.0.0)")]
    public partial class OperationResultInfoOfTrinhDoHocVanDTO : OperationInfo
    {
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public TrinhDoHocVanDTO Result { get; set; }
    
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
        public static OperationResultInfoOfTrinhDoHocVanDTO FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<OperationResultInfoOfTrinhDoHocVanDTO>(data, new Newtonsoft.Json.JsonSerializerSettings());
        }
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.12.0.0 (NJsonSchema v10.4.5.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class FileResponse : System.IDisposable
    {
        private System.IDisposable _client;
        private System.IDisposable _response;

        public int StatusCode { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public System.IO.Stream Stream { get; private set; }

        public bool IsPartial
        {
            get { return StatusCode == 206; }
        }

        public FileResponse(int statusCode, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.IO.Stream stream, System.IDisposable client, System.IDisposable response)
        {
            StatusCode = statusCode;
            Headers = headers;
            Stream = stream;
            _client = client;
            _response = response;
        }

        public void Dispose()
        {
            Stream.Dispose();
            if (_response != null)
                _response.Dispose();
            if (_client != null)
                _client.Dispose();
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.12.0.0 (NJsonSchema v10.4.5.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ProjectT1ApiException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public ProjectT1ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException)
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException)
        {
            StatusCode = statusCode;
            Response = response;
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.12.0.0 (NJsonSchema v10.4.5.0 (Newtonsoft.Json v11.0.0.0))")]
    public partial class ProjectT1ApiException<TResult> : ProjectT1ApiException
    {
        public TResult Result { get; private set; }

        public ProjectT1ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016